class Solution {
    int[] DIR = {1, 0, -1, 0, 1};
    public int numIslands(char[][] grid) {
        int n = 0;
        int rows = grid.length;
        int cols = grid[0].length;
        for(int i = 0; i < rows; i++){
            for(int j = 0; j < cols; j++){
                if(grid[i][j] == '1') {
                    n += visitIsland(grid, i, j);
                }
            }
        }
        return n;
    }
    
    public int visitIsland(char[][] grid, int r, int c){
        if(r < 0 || c < 0 || r >= grid.length || c >= grid[r].length || grid[r][c] == '0') return 0;
        grid[r][c] = '0';
        for(int i = 0; i < DIR.length - 1; i++){
            visitIsland(grid, r + DIR[i], c + DIR[i + 1]);
        }
        return 1;
    }
}
